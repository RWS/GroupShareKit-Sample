@{
    ViewBag.Title = "Projects Page";
}

@model GroupShareKitSample.Models.ProjectViewModel


<div class="row">
    <div id="projectsAction">
        <button type="submit" id="submit-all" class="btn btn-primary "><i class="fa fa-plus" aria-hidden="true"></i> Create project</button>
        <a href="@Url.Action("Index", "Home")" class="btn btn-warning">

            <i class="fa fa-refresh" aria-hidden="true"></i>
            Refresh projects
        </a>
    </div>
    <form id="dropzoneForm" class="dropzone" action='@Url.Action("UploadFile")'>
        <div class="dropzone-previews"></div> <!-- this is were the previews should be shown. -->
        <div class="fallback">
            <!-- this is the fallback if JS isn't working -->
            <input name="file" type="file" multiple />
        </div>

    </form>

</div>

<div class="modal fade" id="settingsModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Please fill project settings</h4>
            </div>
            <div class="modal-body">
                <div class="">
                    @using (Html.BeginForm())
                    {
                        <div class="form-horizontal">
                            <div class="form-group">
                                <label for="projectName" class="col-sm-4 control-label">Project name:</label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control" id="projectName" placeholder="Project name">
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="templateSelect" class="col-sm-4 control-label"> Project template:</label>
                                <div class="col-sm-8">
                                    <select class="form-control" id="templateSelect" name="projectTemplate">
                                        @foreach (var template in Model.Templates)
                                        {
                                            <option value="@template.Id">@template.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="organizationSelect" class="col-sm-4 control-label"> Organization:</label>
                                <div class="col-sm-8">
                                    <select class="form-control" id="organizationSelect" name="organizationSelect">
                                        @foreach (var organization in Model.Organizations)
                                        {
                                            <option value="@organization.Id">@organization.Name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="dueDate" class="col-sm-4 control-label">Due date: </label>
                                <div class="col-sm-8">
                                   <input id ="dueDate" type="text" class="form-control datepicker" placeholder="Due date"/>
                                </div>
                            </div>

                            <div class="modal-footer" style="border-top: none">
                                
                                    <button type="submit" class="btn btn-primary" onclick="createProject()">Finish</button>
                               
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>

<div id="message">

</div>

<div class="row">
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th >Project name</th>
                    <th> Due date</th>
                    <th>Source language</th>
                    <th>Target language</th>
                    <th>Analyse project</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Projects)
            {
                    <tr>
                        <td><i class="fa fa-folder-open" aria-hidden="true"></i>@item.Name</td>
                        <td> @item.DueDate</td>
                        <td>@item.SourceLanguage</td>
                        <td>@item.TargetLanguage</td>
                        <td><a onclick="analyse('@item.ProjectId')"><i class="fa fa-pie-chart" aria-hidden="true"></i></a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
   


@section scripts{
    <script type="text/javascript">

        //File Upload response from the server
        Dropzone.options.dropzoneForm = {
            autoProcessQueue: false,
            uploadMultiple: true,
            parallelUploads: 25,
            maxFiles: 25,
            init: function () {
                var myDropzone = this;
                this.on("maxfilesexceeded", function (data) {
                    var res = eval('(' + data.xhr.responseText + ')');

                });
                this.on("addedfile", function (file) {

                    // Create the remove button
                    var removeButton = Dropzone.createElement("<button class='btn btn-primary'>Remove file</button>");

                    // Listen to the click event
                    removeButton.addEventListener("click", function (e) {
                        // Make sure the button click doesn't submit the form:
                        e.preventDefault();
                        e.stopPropagation();
                        // Remove the file preview.
                        myDropzone.removeFile(file);
                        // If you want to the delete the file on the server as well,
                        // you can do the AJAX request here.
                    });

                    // Add the button to the file preview element.
                    file.previewElement.appendChild(removeButton);
                });
                this.on("complete", function () {
                    $('#settingsModal').modal('show');
                });
                $("#submit-all").click(function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    myDropzone.processQueue();
                });

            }
        };

        function createProject() {
            var projectName = $('#projectName').val();
            var templateSelect = document.getElementById('templateSelect');
            var templateId = templateSelect[templateSelect.selectedIndex].value;
            var dueDate = $("input.datepicker").val();
            var organizationSelect = document.getElementById('organizationSelect');
            var organizationId = organizationSelect[organizationSelect.selectedIndex].value;


            $.ajax({
                url: '@Url.Action("CreateProject")',
                type: 'POST',
                chache: false,
                data: { 'projectName': projectName, 'templateId': templateId, 'organizationId': organizationId,'dueDate':dueDate },
                success:function() {
                    location.reload();
                }
            });
        }

        function analyse(projectId) {
            var test = projectId;
             $.ajax({
                url: '@Url.Action("AnalyseProject")',
                type: 'Get',
                chache: false,
                data: { 'projectId': projectId },
                success:function(response) {
                    var json = JSON.parse(response);
                    if (json.length == 0) {
                        document.getElementById("message").style.display = 'initial';
                        document.getElementById("message").innerHTML = "Not available. Only projects created from SDL Trados GroupShare have reports available on the server.";
                    } else {
                        document.getElementById("message").style.display = 'none';
                        json.forEach(function (item) {
                            var myWindow = window.open("/Analyse/Index", "_blank");
                            myWindow.document.title = "Analyse result";
                            myWindow.document.write(item.Report);
                        });
                    }

                }
            });
        }
        function refreshList() {
            $.ajax({
                url: '/Home/Index',
                chache: false
            });
        }
        //initialize date picker
        $('.datepicker').datepicker();


    </script>
}